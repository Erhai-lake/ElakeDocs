import{_ as t,c as i,o as a,a6 as n}from"./chunks/framework.Du9XbX32.js";const e="/ElakeDocs/assets/8f2e55c64b8a58883c60d009b93c4f5aefb22d1d.CgpYwzDf.png",E=JSON.parse('{"title":"字面量","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/Java/Literals.md","filePath":"Docs/Knowledge/ProgrammingLanguage/Java/Literals.md","lastUpdated":1744046028000}'),l={name:"Docs/Knowledge/ProgrammingLanguage/Java/Literals.md"};function p(r,s,d,h,k,c){return a(),i("div",null,s[0]||(s[0]=[n(`<h1 id="字面量" tabindex="-1">字面量 <a class="header-anchor" href="#字面量" aria-label="Permalink to &quot;字面量&quot;">​</a></h1><p><strong>字面量</strong>就是程序能直接书写的数据, 这个的重点是, 搞清楚不同数据在代码中的书写格式</p><p>字面量的分类:</p><table tabindex="0"><thead><tr><th style="text-align:center;">常用数据</th><th style="text-align:center;">生活中的写法</th><th style="text-align:center;">代码中该怎么写</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">整数</td><td style="text-align:center;">666, -88</td><td style="text-align:center;"><code>666</code>, <code>-88</code></td><td style="text-align:center;">写法一致</td></tr><tr><td style="text-align:center;">小数</td><td style="text-align:center;">13.14, -5.21</td><td style="text-align:center;"><code>13.14</code>, <code>-5.21</code></td><td style="text-align:center;">写法一致</td></tr><tr><td style="text-align:center;">字符</td><td style="text-align:center;">A, 0, 我</td><td style="text-align:center;"><code>&#39;A&#39;</code>, <code>&#39;0&#39;</code>, <code>&#39;我&#39;</code></td><td style="text-align:center;">必须使用单引号且只能有一个字符</td></tr><tr><td style="text-align:center;">字符串</td><td style="text-align:center;">洱海, 喵喵喵~</td><td style="text-align:center;"><code>&quot;洱海&quot;</code>, <code>&quot;喵喵喵~&quot;</code></td><td style="text-align:center;">必须使用双引号, 内容可有可无</td></tr><tr><td style="text-align:center;">布尔值</td><td style="text-align:center;">真, 假</td><td style="text-align:center;"><code>true</code>, <code>false</code></td><td style="text-align:center;">只有两个值</td></tr><tr><td style="text-align:center;">空值</td><td style="text-align:center;">-</td><td style="text-align:center;"><code>null</code></td><td style="text-align:center;">一个特殊的值(后面在讲这个)</td></tr><tr><td style="text-align:center;">特殊字符字面量</td><td style="text-align:center;">-</td><td style="text-align:center;"><code>\\t</code>, <code>\\n</code></td><td style="text-align:center;">-</td></tr></tbody></table><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pintLiteral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pintLiteral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">666</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;喵喵喵~&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // \\t(Tab缩进)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // \\n(换行)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">World&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><img src="`+e+'" alt="8f2e55c64b8a58883c60d009b93c4f5aefb22d1d" data-fancybox="gallery" loading="lazy"></p>',6)]))}const o=t(l,[["render",p]]);export{E as __pageData,o as default};
