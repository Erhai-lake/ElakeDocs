import{_ as e,c as o,o as t,a6 as i}from"./chunks/framework.Du9XbX32.js";const r="/ElakeDocs/assets/50f64ae063c6160747c9c04044b348615d5f6bae.BmNLjlcB.png",g=JSON.parse('{"title":"常见指令","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/Git/BasicProcess.md","filePath":"Docs/Knowledge/ProgrammingLanguage/Git/BasicProcess.md","lastUpdated":1742722027000}'),c={name:"Docs/Knowledge/ProgrammingLanguage/Git/BasicProcess.md"};function l(d,a,n,s,p,h){return t(),o("div",null,a[0]||(a[0]=[i('<h1 id="常见指令" tabindex="-1">常见指令 <a class="header-anchor" href="#常见指令" aria-label="Permalink to &quot;常见指令&quot;">​</a></h1><p>Git工作目录下对于文件的修改(增加, 删除, 更新)会存在几个状态, 这些修改的状态会随着我们执行Git的命令而发生变化.</p><p><img src="'+r+'" alt="50f64ae063c6160747c9c04044b348615d5f6bae" data-fancybox="gallery" loading="lazy"></p><h2 id="初始化git仓库" tabindex="-1">初始化Git仓库 <a class="header-anchor" href="#初始化git仓库" aria-label="Permalink to &quot;初始化Git仓库&quot;">​</a></h2><p><code>git inif</code></p><h2 id="加入暂存区" tabindex="-1">加入暂存区 <a class="header-anchor" href="#加入暂存区" aria-label="Permalink to &quot;加入暂存区&quot;">​</a></h2><p>将工作区的文件, 加入暂存区</p><p><code>git add 单个文件名|通配符</code></p><p><code>git add .</code>指加入所有文件</p><h2 id="提交本地仓库" tabindex="-1">提交本地仓库 <a class="header-anchor" href="#提交本地仓库" aria-label="Permalink to &quot;提交本地仓库&quot;">​</a></h2><p>将暂存区的文件提交到本地仓库的当前分支</p><p><code>git commit -m &quot;注释&quot;</code></p><p>注释是必填的</p><h2 id="同步远程仓库" tabindex="-1">同步远程仓库 <a class="header-anchor" href="#同步远程仓库" aria-label="Permalink to &quot;同步远程仓库&quot;">​</a></h2><p>将本地仓库同步到远程仓库</p><p><code>git push</code></p><h2 id="其他指令" tabindex="-1">其他指令 <a class="header-anchor" href="#其他指令" aria-label="Permalink to &quot;其他指令&quot;">​</a></h2><h3 id="查看文件的修改状态" tabindex="-1">查看文件的修改状态 <a class="header-anchor" href="#查看文件的修改状态" aria-label="Permalink to &quot;查看文件的修改状态&quot;">​</a></h3><p>查看文件的修改状态(暂存区, 工作区)</p><p><code>git status</code></p><h3 id="查看提交日志" tabindex="-1">查看提交日志 <a class="header-anchor" href="#查看提交日志" aria-label="Permalink to &quot;查看提交日志&quot;">​</a></h3><p>查看提交日志信息</p><p><code>git log [参数]</code></p><ul><li>参数 <ul><li>--all 显示所有分支</li><li>--pretty=oneline 将提交信息显示为一行</li><li>--abbrev-commit 使输出的commit更简短</li><li>--graph 以图的形式输出</li></ul></li></ul><h3 id="版本回退" tabindex="-1">版本回退 <a class="header-anchor" href="#版本回退" aria-label="Permalink to &quot;版本回退&quot;">​</a></h3><p>版本切换</p><p><code>git reset --hard commitID</code></p><p>commitID 可以用<code>git log</code>查看</p><h3 id="查看版本回退日志" tabindex="-1">查看版本回退日志 <a class="header-anchor" href="#查看版本回退日志" aria-label="Permalink to &quot;查看版本回退日志&quot;">​</a></h3><p>查看版本回退日志</p><p><code>git reflog</code></p><h3 id="添加文件到忽略列表" tabindex="-1">添加文件到忽略列表 <a class="header-anchor" href="#添加文件到忽略列表" aria-label="Permalink to &quot;添加文件到忽略列表&quot;">​</a></h3><p>如果你不希望某些文件被git管理</p><p>在工作目录创建一个文件<code>.gitignore</code>(文件名固定)</p><p>然后在里面写上要忽略的文件名/目录, 支持通配符, 一行一个</p>',35)]))}const u=e(c,[["render",l]]);export{g as __pageData,u as default};
