import { Plugin } from "vite";
import Markdown from "markdown-it";

//#region src/builtin.d.ts
declare const builtinIcons: {
  pnpm: string;
  npm: string;
  yarn: string;
  bun: string;
  deno: string;
  vue: string;
  svelte: string;
  angular: string;
  react: string;
  next: string;
  nuxt: string;
  solid: string;
  astro: string;
  qwik: string;
  rollup: string;
  webpack: string;
  vite: string;
  esbuild: string;
  'package.json': string;
  'tsconfig.json': string;
  '.npmrc': string;
  '.editorconfig': string;
  '.eslintrc': string;
  '.eslintignore': string;
  'eslint.config': string;
  '.gitignore': string;
  '.gitattributes': string;
  '.env': string;
  '.env.example': string;
  '.vscode': string;
  'tailwind.config': string;
  'uno.config': string;
  'unocss.config': string;
  '.oxlintrc': string;
  'vue.config': string;
  '.mts': string;
  '.cts': string;
  '.ts': string;
  '.tsx': string;
  '.mjs': string;
  '.cjs': string;
  '.json': string;
  '.js': string;
  '.jsx': string;
  '.md': string;
  '.py': string;
  '.ico': string;
  '.html': string;
  '.css': string;
  '.scss': string;
  '.yml': string;
  '.yaml': string;
  '.php': string;
};
//#endregion
//#region src/helper.d.ts
declare function localIconLoader(url: string, path: string): string;
//#endregion
//#region src/markdown.d.ts
interface MdPluginOptions {
  titleBar: {
    /**
     * Whether the title bar is included in the [Snippets](https://vitepress.dev/guide/markdown#import-code-snippets)
     *
     * @defaultValue false
     */
    includeSnippet?: boolean;
  };
}
declare function groupIconMdPlugin(md: Markdown, options?: MdPluginOptions): void;
//#endregion
//#region src/vite.d.ts
interface Options {
  customIcon?: Record<string, string>;
  defaultLabels?: string[];
}
declare function groupIconVitePlugin(options?: Options): Plugin;
//#endregion
export { Options, builtinIcons, groupIconMdPlugin, groupIconVitePlugin, localIconLoader };