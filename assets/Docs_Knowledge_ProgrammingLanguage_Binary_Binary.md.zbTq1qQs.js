import{_ as o,c as e,o as r,a6 as t}from"./chunks/framework.BQ10fS7j.js";const m=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/Binary/Binary.md","filePath":"Docs/Knowledge/ProgrammingLanguage/Binary/Binary.md","lastUpdated":1742722027000}'),n={name:"Docs/Knowledge/ProgrammingLanguage/Binary/Binary.md"};function i(l,a,s,d,c,g){return r(),e("div",null,a[0]||(a[0]=[t('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><h2 id="什么是二进制" tabindex="-1">什么是二进制 <a class="header-anchor" href="#什么是二进制" aria-label="Permalink to &quot;什么是二进制&quot;">​</a></h2><p><strong>二进制</strong>(Binary)是一种<strong>计数系统</strong>, 与日常生活中使用的<strong>十进制</strong>(Decimal)系统不同, 二进制系统中仅有两个数字:0和1</p><p>在计算机科学和电子学领域, 二进制是基础, 因为计算机和电子设备中的数据存储/处理和传输都是基于二进制系统的</p><h2 id="二进制的基本原理" tabindex="-1">二进制的基本原理 <a class="header-anchor" href="#二进制的基本原理" aria-label="Permalink to &quot;二进制的基本原理&quot;">​</a></h2><ol><li><strong>位</strong>(Bit): 二进制中的最小单位称为位, 用<code>bit</code>表示.一个位只能存储0或1这两个值</li><li><strong>字节</strong>(Byte): 8位二进制数组成一个字节, 用<code>B</code>表示.字节是计算机存储和传输数据的基本单位</li><li><strong>进位</strong>: 在二进制中, 每增加1, 当达到最大值1时, 就会向前进位.例如, 二进制数01加1变为10</li></ol><h2 id="二进制的表示方法" tabindex="-1">二进制的表示方法 <a class="header-anchor" href="#二进制的表示方法" aria-label="Permalink to &quot;二进制的表示方法&quot;">​</a></h2><p>二进制数通常在数字前加上<code>0b</code>或<code>B</code>来表示, 例如:<code>0b1010</code>或<code>B1010</code></p><p>在某些编程语言中, 也可以直接使用数字表示二进制, 如<code>1010</code></p><h2 id="二进制的优点" tabindex="-1">二进制的优点 <a class="header-anchor" href="#二进制的优点" aria-label="Permalink to &quot;二进制的优点&quot;">​</a></h2><ol><li><strong>简单性</strong>: 二进制只有两个数字, 0和1, 易于电子器件实现</li><li><strong>可靠性</strong>: 二进制系统抗干扰能力强, 误码率低</li><li><strong>通用性</strong>: 二进制广泛应用于计算机, 通信, 电子等领域</li><li><strong>易于逻辑运算</strong>: 二进制与逻辑运算(如与, 或, 非)紧密相关, 便于实现复杂的逻辑功能</li></ol>',11)]))}const _=o(n,[["render",i]]);export{m as __pageData,_ as default};
