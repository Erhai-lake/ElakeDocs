import{_ as a,c as i,o as n,a6 as e}from"./chunks/framework.BQ10fS7j.js";const o=JSON.parse('{"title":"规范","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/JavaScript/Specification.md","filePath":"Docs/Knowledge/ProgrammingLanguage/JavaScript/Specification.md","lastUpdated":1742722027000}'),l={name:"Docs/Knowledge/ProgrammingLanguage/JavaScript/Specification.md"};function p(t,s,h,r,k,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h1><p>部分摘抄自 <a href="//standardjs.com/rules-zhcn" target="_blank" rel="noreferrer">JavaScript 社区规范</a></p><p><strong>规范仅供参考, JavaScript 并没有所谓的官方规范, 一切规范遵循开发团队的规定</strong></p><p><code>%</code>代表<strong>需强制执行</strong></p><p><code>&amp;</code>代表<strong>取决于个人习惯, 非强制执行</strong></p><h2 id="注释时首尾统一加空格" tabindex="-1">注释时首尾统一加空格 % <a class="header-anchor" href="#注释时首尾统一加空格" aria-label="Permalink to &quot;注释时首尾统一加空格 %&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`//我是注释\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ×</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`// 我是注释\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> √</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`/*我是注释*/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ×</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`/* 我是注释 */\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> √</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="变量命名" tabindex="-1">变量命名 &amp; <a class="header-anchor" href="#变量命名" aria-label="Permalink to &quot;变量命名 &amp;&quot;">​</a></h2><p>不使用<strong>拼音</strong>, 意义不明的字母和<strong>意义不明的数字</strong>作为变量名</p><p>遵循驼峰命名法</p><ol><li>小驼峰:第一个单词首字母小写, 后面每个单词首字母大写.例如:<code>userName</code></li><li>大驼峰:每个单词首字母都大写.例如:<code>UserName</code></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mingzi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ×</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> √</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="非匿名箭头函数加参数括号" tabindex="-1">非匿名箭头函数加参数括号 &amp; <a class="header-anchor" href="#非匿名箭头函数加参数括号" aria-label="Permalink to &quot;非匿名箭头函数加参数括号 &amp;&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">×</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">√</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,14)]))}const g=a(l,[["render",p]]);export{o as __pageData,g as default};
