import{_ as e,c as r,o as t,a6 as i}from"./chunks/framework.X-bX-Y7_.js";const m=JSON.parse('{"title":"JS库","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/JavaScript/JsLibraries.md","filePath":"Docs/Knowledge/ProgrammingLanguage/JavaScript/JsLibraries.md","lastUpdated":1742722027000}'),o={name:"Docs/Knowledge/ProgrammingLanguage/JavaScript/JsLibraries.md"};function s(n,a,l,p,c,_){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="js库" tabindex="-1">JS库 <a class="header-anchor" href="#js库" aria-label="Permalink to &quot;JS库&quot;">​</a></h1><p>JS库, 也称插件</p><p>就是引用别人封装好的JS代码, 比如别人写好了一个轮播图, 你只需要引用这个JS代码, 改一下图片就可以了</p><p>:::note 在业内, 我们称为轮子, 别人造好了轮子, 就不需要我们重复造轮了, 按照轮子造车即可 :::</p><p>学习一个JS库的基本流程</p><ol><li>熟悉官网 (这是了解库的官方信息和最新动态的好方法.官网通常会提供库的概述, 功能, 更新日志和入门指南)</li><li>浏览在线Demo (通过查看在线演示, 可以了解库的实际应用和功能实现, 有助于加深对库的理解)</li><li>熟悉API文档 (这是学习如何使用库的关键步骤.API文档详细描述了库提供的各种功能和如何使用它们)</li><li>实践 (实际编写代码来使用这个库是巩固学习的最好方法.通过实践, 你可以更好地理解库的功能和应用场景)</li></ol>',6)]))}const g=e(o,[["render",s]]);export{m as __pageData,g as default};
