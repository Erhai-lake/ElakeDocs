import{_ as e,c as n,o as a,a6 as r}from"./chunks/framework.X-bX-Y7_.js";const x=JSON.parse('{"title":"数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/Java/DataTypes.md","filePath":"Docs/Knowledge/ProgrammingLanguage/Java/DataTypes.md","lastUpdated":1742722027000}'),l={name:"Docs/Knowledge/ProgrammingLanguage/Java/DataTypes.md"};function d(s,t,g,i,c,o){return a(),n("div",null,t[0]||(t[0]=[r('<h1 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h1><p>数据类型有:</p><p>基本数据类型(前期的重点)</p><p>引用数据类型(后期重点)</p><h2 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h2><p>基本数据类型:<strong>4大类8钟</strong></p><table tabindex="0"><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:center;"></th><th style="text-align:center;">内存占用(字节数)</th><th style="text-align:center;">数据范围</th></tr></thead><tbody><tr><td style="text-align:center;">整数</td><td style="text-align:center;">byte</td><td style="text-align:center;">1</td><td style="text-align:center;">-128 ~ 127</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">short</td><td style="text-align:center;">2</td><td style="text-align:center;">-32768 ~ 32767</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"><strong>int(默认)</strong></td><td style="text-align:center;">4</td><td style="text-align:center;">-2, 147, 483, 648 ~ 2, 147, 483, 647</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">long</td><td style="text-align:center;">8</td><td style="text-align:center;">-9, 223, 372, 036, 854, 775, 808 ~ 9, 223, 372, 036, 854, 775, 807</td></tr><tr><td style="text-align:center;">浮点数</td><td style="text-align:center;">float</td><td style="text-align:center;">4</td><td style="text-align:center;">1.4E-45 ~ 3.4028235E+38</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"><strong>double(默认)</strong></td><td style="text-align:center;">8</td><td style="text-align:center;">4.9E-324 ~ 1.7976931348623157E+308</td></tr><tr><td style="text-align:center;">字符</td><td style="text-align:center;"><strong>char</strong></td><td style="text-align:center;">2</td><td style="text-align:center;">0 ~ 65535</td></tr><tr><td style="text-align:center;">布尔</td><td style="text-align:center;"><strong>boolean</strong></td><td style="text-align:center;">1</td><td style="text-align:center;">true, false</td></tr></tbody></table>',7)]))}const h=e(l,[["render",d]]);export{x as __pageData,h as default};
