import{_ as i,c as a,o as e,a6 as t}from"./chunks/framework.Du9XbX32.js";const d=JSON.parse('{"title":"rem配合flexible布局","description":"","frontmatter":{},"headers":[],"relativePath":"Docs/Knowledge/ProgrammingLanguage/Html5CSS3/RemWithFlexibleLayout.md","filePath":"Docs/Knowledge/ProgrammingLanguage/Html5CSS3/RemWithFlexibleLayout.md","lastUpdated":1727457588000}'),l={name:"Docs/Knowledge/ProgrammingLanguage/Html5CSS3/RemWithFlexibleLayout.md"};function n(r,s,p,h,o,k){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="rem配合flexible布局" tabindex="-1">rem配合flexible布局 <a class="header-anchor" href="#rem配合flexible布局" aria-label="Permalink to &quot;rem配合flexible布局&quot;">​</a></h1><p>flexible.js是淘宝开发出的一个用于<strong>适配移动端</strong>的<strong>js库</strong></p><p>核心原理就是根据<strong>不同的视口宽度</strong>给网页中的<strong>html根节点</strong>设置<strong>不同</strong>的<code>font-size</code></p><p>引用:</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">boby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;js/flexible.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">boby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,5)]))}const c=i(l,[["render",n]]);export{d as __pageData,c as default};
